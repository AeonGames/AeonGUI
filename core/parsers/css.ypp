%{
/*
Copyright (C) 2019 Rodrigo Jose Hernandez Cordoba
Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at
http://www.apache.org/licenses/LICENSE-2.0
Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/
#define YY_NO_UNISTD_H 1
#include <cstddef>
#include <cstdint>
#include <cmath>
#include <iostream>

extern int csslex();

extern "C"
{
    int csserror (const char *s);
}
%}
%define api.prefix {css}
%token ANGLE ATKEYWORD BAD_STRING BAD_URI CDC CDO CHARSET_SYM DASHMATCH DELIM DIMENSION EMS EXS FREQ FUNCTION HASH IDENT IMPORTANT_SYM IMPORT_SYM INCLUDES LENGTH MEDIA_SYM NUMBER PAGE_SYM PERCENTAGE S STRING TIME UNICODE_RANGE URI
%%

/* This shall follow https://www.w3.org/TR/css-syntax-3/ */
at-rule:
    ATKEYWORD bracket-block |
    ATKEYWORD ';' |
    ATKEYWORD component-value-list bracket-block |
    ATKEYWORD component-value-list ';'
    ;
bracket-block:
    '{' '}' | '{' component-value-list '}'
    ;
square-bracket-block:
    '[' ']' | '[' component-value-list ']'
    ;
parenthesis-block:
    '(' ')' | '(' component-value-list ')'
    ;
function-block:
    FUNCTION ')' | FUNCTION component-value-list ')'
    ;
component-value-list: component-value | component-value-list component-value
    ;
component-value:
    preserved-token | bracket-block | square-bracket-block | parenthesis-block | function-block
    ;
preserved-token:
    ANGLE |
    ATKEYWORD |
    BAD_STRING |
    BAD_URI |
    CDC |
    CDO |
    CHARSET_SYM |
    DASHMATCH |
    DELIM |
    DIMENSION |
    EMS |
    EXS |
    FREQ |
    HASH |
    IDENT |
    IMPORTANT_SYM |
    IMPORT_SYM |
    INCLUDES |
    LENGTH |
    MEDIA_SYM |
    NUMBER |
    PAGE_SYM |
    PERCENTAGE |
    S |
    STRING |
    TIME |
    UNICODE_RANGE |
    URI
    ;
%%
extern "C"
{
    int csserror (const char *s)
    {
        std::cerr << s << std::endl;
        return 0;
    }
}
