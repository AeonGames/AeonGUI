name: Build on Windows

on: [push, pull_request]

env:
  USERNAME: AeonGames
  VCPKG_EXE: C:\vcpkg\vcpkg.exe
  FEED_URL: https://nuget.pkg.github.com/AeonGames/index.json
  VCPKG_BINARY_SOURCES: "clear;nuget,https://nuget.pkg.github.com/AeonGames/index.json,readwrite;nugettimeout,900"
  VCPKG_FEATURE_FLAGS: "binarycaching,manifests,versions"
  VCPKG_VERBOSE: "1"

jobs:
  build:
    runs-on: windows-latest
    permissions:
      contents: read
      packages: write

    strategy:
      matrix:
        compiler: [msvc]

    steps:
    - name: 'üß∞ Checkout'
      uses: actions/checkout@v2

    - name: üîÑ Update Visual Studio
      shell: pwsh
      run: |
        & "${env:ProgramFiles(x86)}\Microsoft Visual Studio\Installer\vs_installer.exe" update --installPath "${env:ProgramFiles}\Microsoft Visual Studio\2022\Enterprise" --quiet --wait
      if: matrix.compiler == 'msvc'

    - name: ‚¨ÜÔ∏è Update VCPKG
      shell: pwsh
      run: |
        cd C:\vcpkg
        git pull
        .\bootstrap-vcpkg.bat
      if: matrix.compiler == 'msvc'

    - name: üì¶ Add NuGet sources
      shell: pwsh
      run: |
        .$(${{ env.VCPKG_EXE }} fetch nuget) `
          sources add `
          -Source "${{ env.FEED_URL }}" `
          -StorePasswordInClearText `
          -Name GitHubPackages `
          -UserName "${{ env.USERNAME }}" `
          -Password "${{ secrets.GITHUB_TOKEN }}"
        .$(${{ env.VCPKG_EXE }} fetch nuget) `
          setapikey "${{ secrets.GITHUB_TOKEN }}" `
          -Source "${{ env.FEED_URL }}"
      if: matrix.compiler == 'msvc'

    - name: 'üõ†Ô∏è Configuring'
      run: cmake -DCMAKE_TOOLCHAIN_FILE="C:/vcpkg/scripts/buildsystems/vcpkg.cmake" -B ${{github.workspace}}/build
      if: matrix.compiler == 'msvc'

    - name: 'üèóÔ∏è Building'
      run: cmake --build ${{github.workspace}}/build

    - name: 'üß™ Running Tests'
      run: ctest -C Debug --test-dir ${{github.workspace}}/build
