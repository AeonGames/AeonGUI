diff --git a/docs/Bytecode b/docs/Bytecode
index 272fd07..bab7aea 100644
--- a/docs/Bytecode
+++ b/docs/Bytecode
@@ -1401,4 +1401,24 @@ Opcodes
 			bit 7 clear => Reserved for future expansion
 				bits 0-6: MBZ
 
-7e-3ff - Reserved for future expansion.
+7e - fill
+	<value> (14bits) :
+		bit 8-13: MBZ
+		bit 7 set => colour follows.
+			bits 0-6: MBZ
+		bit 7 clear => keyword colour:
+			bits 0-6: 0000000 => transparent,
+				  0000001 => currentColor,
+				  other   => rffe.
+
+7e - stroke
+	<value> (14bits) :
+		bit 8-13: MBZ
+		bit 7 set => colour follows.
+			bits 0-6: MBZ
+		bit 7 clear => keyword colour:
+			bits 0-6: 0000000 => transparent,
+				  0000001 => currentColor,
+				  other   => rffe.
+
+80-3ff - Reserved for future expansion.
diff --git a/include/libcss/computed.h b/include/libcss/computed.h
index 5d9cc7e..5b9e639 100644
--- a/include/libcss/computed.h
+++ b/include/libcss/computed.h
@@ -346,6 +346,14 @@ uint8_t css_computed_stroke_opacity(
 		const css_computed_style *style,
 		css_fixed *stroke_opacity);
 
+uint8_t css_computed_fill(
+		const css_computed_style *style,
+		css_color *color);
+
+uint8_t css_computed_stroke(
+		const css_computed_style *style,
+		css_color *color);
+
 uint8_t css_computed_text_transform(
 		const css_computed_style *style);
 
diff --git a/include/libcss/properties.h b/include/libcss/properties.h
index cb1f0ff..34de5c8 100644
--- a/include/libcss/properties.h
+++ b/include/libcss/properties.h
@@ -140,6 +140,8 @@ enum css_properties_e {
 	CSS_PROP_ORDER				= 0x07b,
 	CSS_PROP_FILL_OPACITY			= 0x07c,
 	CSS_PROP_STROKE_OPACITY			= 0x07d,
+	CSS_PROP_FILL	        		= 0x07e,
+	CSS_PROP_STROKE			        = 0x07f,
 
 	CSS_N_PROPERTIES
 };
@@ -453,6 +455,12 @@ enum css_empty_cells_e {
 	CSS_EMPTY_CELLS_HIDE			= 0x2
 };
 
+enum css_fill_e {
+	CSS_FILL_INHERIT		        = 0x0,
+	CSS_FILL_COLOR		            = 0x1,
+	CSS_FILL_CURRENT_COLOR	        = 0x2
+};
+
 enum css_fill_opacity_e {
 	CSS_FILL_OPACITY_INHERIT		= 0x0,
 	CSS_FILL_OPACITY_SET			= 0x1
@@ -787,6 +795,12 @@ enum css_right_e {
 	CSS_RIGHT_AUTO				= 0x2
 };
 
+enum css_stroke_e {
+	CSS_STROKE_INHERIT		        = 0x0,
+	CSS_STROKE_COLOR		            = 0x1,
+	CSS_STROKE_CURRENT_COLOR	        = 0x2
+};
+
 enum css_stroke_opacity_e {
 	CSS_STROKE_OPACITY_INHERIT		= 0x0,
 	CSS_STROKE_OPACITY_SET			= 0x1
diff --git a/src/bytecode/opcodes.h b/src/bytecode/opcodes.h
index 7a1377b..1dff2fb 100644
--- a/src/bytecode/opcodes.h
+++ b/src/bytecode/opcodes.h
@@ -351,11 +351,16 @@ enum op_empty_cells {
 	EMPTY_CELLS_HIDE		= 0x0001
 };
 
+enum op_fill {
+	FILL_TRANSPARENT	= 0x0000,
+	FILL_CURRENT_COLOR	= 0x0001,
+	FILL_SET    		= 0x0080
+};
+
 enum op_fill_opacity {
 	FILL_OPACITY_SET		= 0x0080
 };
 
-
 enum op_flex_basis {
 	FLEX_BASIS_AUTO			= 0x0000,
 	FLEX_BASIS_CONTENT		= 0x0001,
@@ -726,6 +731,12 @@ enum op_stress {
 	STRESS_SET			= 0x0080
 };
 
+enum op_stroke {
+	STROKE_TRANSPARENT	= 0x0000,
+	STROKE_CURRENT_COLOR	= 0x0001,
+	STROKE_SET    		= 0x0080
+};
+
 enum op_stroke_opacity {
 	STROKE_OPACITY_SET		= 0x0080
 };
diff --git a/src/parse/important.c b/src/parse/important.c
index 02aafc4..a45e7e5 100644
--- a/src/parse/important.c
+++ b/src/parse/important.c
@@ -94,6 +94,8 @@ void css__make_style_important(css_style *style)
 					offset += 2; /* length + units */
 				break;
 
+			case CSS_PROP_FILL:
+			case CSS_PROP_STROKE:
 			case CSS_PROP_BORDER_TOP_COLOR:
 			case CSS_PROP_BORDER_RIGHT_COLOR:
 			case CSS_PROP_BORDER_BOTTOM_COLOR:
@@ -104,6 +106,10 @@ void css__make_style_important(css_style *style)
 				       (enum op_background_color)BORDER_COLOR_SET);
 				assert(BACKGROUND_COLOR_SET ==
 				       (enum op_background_color)COLUMN_RULE_COLOR_SET);
+				assert(BACKGROUND_COLOR_SET ==
+				       (enum op_background_color)FILL_SET);
+				assert(BACKGROUND_COLOR_SET ==
+				       (enum op_background_color)STROKE_SET);
 
 				if (value == BACKGROUND_COLOR_SET)
 					offset++; /* colour */
diff --git a/src/parse/properties/properties.c b/src/parse/properties/properties.c
index 2cc849c..099f739 100644
--- a/src/parse/properties/properties.c
+++ b/src/parse/properties/properties.c
@@ -74,6 +74,7 @@ const css_prop_handler property_handlers[LAST_PROP + 1 - FIRST_PROP] =
 	css__parse_display,
 	css__parse_elevation,
 	css__parse_empty_cells,
+	css__parse_fill,
 	css__parse_fill_opacity,
 	css__parse_flex,
 	css__parse_flex_basis,
@@ -141,6 +142,7 @@ const css_prop_handler property_handlers[LAST_PROP + 1 - FIRST_PROP] =
 	css__parse_speak,
 	css__parse_speech_rate,
 	css__parse_stress,
+	css__parse_stroke,
 	css__parse_stroke_opacity,
 	css__parse_table_layout,
 	css__parse_text_align,
@@ -265,6 +267,8 @@ const uint32_t property_unit_mask[CSS_N_PROPERTIES] = {
 	[CSS_PROP_OPACITY]               = UNIT_MASK_OPACITY,
 	[CSS_PROP_FILL_OPACITY]          = UNIT_MASK_FILL_OPACITY,
 	[CSS_PROP_STROKE_OPACITY]        = UNIT_MASK_STROKE_OPACITY,
+	[CSS_PROP_FILL]                  = UNIT_MASK_FILL,
+	[CSS_PROP_STROKE]                = UNIT_MASK_STROKE,
 	[CSS_PROP_BREAK_AFTER]           = UNIT_MASK_BREAK_AFTER,
 	[CSS_PROP_BREAK_BEFORE]          = UNIT_MASK_BREAK_BEFORE,
 	[CSS_PROP_BREAK_INSIDE]          = UNIT_MASK_BREAK_INSIDE,
diff --git a/src/parse/properties/properties.gen b/src/parse/properties/properties.gen
index b0e797c..fde5fb0 100644
--- a/src/parse/properties/properties.gen
+++ b/src/parse/properties/properties.gen
@@ -237,3 +237,7 @@ flex_wrap:CSS_PROP_FLEX_WRAP IDENT:( INHERIT: INITIAL: REVERT: UNSET: NOWRAP:0,F
 justify_content:CSS_PROP_JUSTIFY_CONTENT IDENT:( INHERIT: INITIAL: REVERT: UNSET: FLEX_START:0,JUSTIFY_CONTENT_FLEX_START FLEX_END:0,JUSTIFY_CONTENT_FLEX_END CENTER:0,JUSTIFY_CONTENT_CENTER SPACE_BETWEEN:0,JUSTIFY_CONTENT_SPACE_BETWEEN SPACE_AROUND:0,JUSTIFY_CONTENT_SPACE_AROUND SPACE_EVENLY:0,JUSTIFY_CONTENT_SPACE_EVENLY IDENT:)
 
 order:CSS_PROP_ORDER IDENT:( INHERIT: INITIAL: REVERT: UNSET: IDENT:) NUMBER:( true:ORDER_SET NUMBER:)
+
+fill:CSS_PROP_FILL IDENT:( INHERIT: INITIAL: REVERT: UNSET: IDENT:) COLOR:FILL_SET
+
+stroke:CSS_PROP_STROKE IDENT:( INHERIT: INITIAL: REVERT: UNSET: IDENT:) COLOR:STROKE_SET
diff --git a/src/parse/properties/properties.h b/src/parse/properties/properties.h
index 17b7f41..a9c6f6e 100644
--- a/src/parse/properties/properties.h
+++ b/src/parse/properties/properties.h
@@ -208,6 +208,9 @@ css_error css__parse_elevation(css_language *c,
 css_error css__parse_empty_cells(css_language *c,
 		const parserutils_vector *vector, int32_t *ctx,
 		css_style *result);
+css_error css__parse_fill(css_language *c,
+		const parserutils_vector *vector, int32_t *ctx,
+		css_style *result);
 css_error css__parse_fill_opacity(css_language *c,
 		const parserutils_vector *vector, int32_t *ctx,
 		css_style *result);
@@ -409,6 +412,9 @@ css_error css__parse_speech_rate(css_language *c,
 css_error css__parse_stress(css_language *c,
 		const parserutils_vector *vector, int32_t *ctx,
 		css_style *result);
+css_error css__parse_stroke(css_language *c,
+		const parserutils_vector *vector, int32_t *ctx,
+		css_style *result);
 css_error css__parse_stroke_opacity(css_language *c,
 		const parserutils_vector *vector, int32_t *ctx,
 		css_style *result);
@@ -554,6 +560,8 @@ extern const uint32_t property_unit_mask[CSS_N_PROPERTIES];
 #define UNIT_MASK_OPACITY               (0)
 #define UNIT_MASK_FILL_OPACITY          (0)
 #define UNIT_MASK_STROKE_OPACITY        (0)
+#define UNIT_MASK_FILL          		(0)
+#define UNIT_MASK_STROKE		        (0)
 #define UNIT_MASK_BREAK_AFTER           (0)
 #define UNIT_MASK_BREAK_BEFORE          (0)
 #define UNIT_MASK_BREAK_INSIDE          (0)
diff --git a/src/parse/propstrings.c b/src/parse/propstrings.c
index c57bc1b..23d9bcd 100644
--- a/src/parse/propstrings.c
+++ b/src/parse/propstrings.c
@@ -148,6 +148,7 @@ const stringmap_entry stringmap[LAST_KNOWN] = {
 	SMAP("display"),
 	SMAP("elevation"),
 	SMAP("empty-cells"),
+	SMAP("fill"),
 	SMAP("fill-opacity"),
 	SMAP("flex"),
 	SMAP("flex-basis"),
@@ -215,6 +216,7 @@ const stringmap_entry stringmap[LAST_KNOWN] = {
 	SMAP("speak"),
 	SMAP("speech-rate"),
 	SMAP("stress"),
+	SMAP("stroke"),
 	SMAP("stroke-opacity"),
 	SMAP("table-layout"),
 	SMAP("text-align"),
diff --git a/src/parse/propstrings.h b/src/parse/propstrings.h
index 8491e72..5440439 100644
--- a/src/parse/propstrings.h
+++ b/src/parse/propstrings.h
@@ -51,8 +51,8 @@ enum {
 	COLUMN_COUNT, COLUMN_FILL, COLUMN_GAP, COLUMN_RULE, COLUMN_RULE_COLOR,
 	COLUMN_RULE_STYLE, COLUMN_RULE_WIDTH, COLUMN_SPAN, COLUMN_WIDTH,
 	CONTENT, COUNTER_INCREMENT, COUNTER_RESET, CUE, CUE_AFTER, CUE_BEFORE,
-	CURSOR, DIRECTION, DISPLAY, ELEVATION, EMPTY_CELLS, FILL_OPACITY, FLEX,
-	FLEX_BASIS, FLEX_DIRECTION, FLEX_FLOW, FLEX_GROW, FLEX_SHRINK,
+	CURSOR, DIRECTION, DISPLAY, ELEVATION, EMPTY_CELLS, FILL, FILL_OPACITY,
+	FLEX, FLEX_BASIS, FLEX_DIRECTION, FLEX_FLOW, FLEX_GROW, FLEX_SHRINK,
 	FLEX_WRAP, LIBCSS_FLOAT, FONT, FONT_FAMILY, FONT_SIZE, FONT_STYLE,
 	FONT_VARIANT, FONT_WEIGHT, HEIGHT, JUSTIFY_CONTENT, LEFT,
 	LETTER_SPACING, LINE_HEIGHT, LIST_STYLE, LIST_STYLE_IMAGE,
@@ -64,8 +64,8 @@ enum {
 	PAGE_BREAK_AFTER, PAGE_BREAK_BEFORE, PAGE_BREAK_INSIDE, PAUSE,
 	PAUSE_AFTER, PAUSE_BEFORE, PITCH_RANGE, PITCH, PLAY_DURING, POSITION,
 	QUOTES, RICHNESS, RIGHT, SPEAK_HEADER, SPEAK_NUMERAL, SPEAK_PUNCTUATION,
-	SPEAK, SPEECH_RATE, STRESS, STROKE_OPACITY, TABLE_LAYOUT, TEXT_ALIGN,
-	TEXT_DECORATION, TEXT_INDENT, TEXT_TRANSFORM, TOP, UNICODE_BIDI,
+	SPEAK, SPEECH_RATE, STRESS, STROKE, STROKE_OPACITY, TABLE_LAYOUT,
+	TEXT_ALIGN, TEXT_DECORATION, TEXT_INDENT, TEXT_TRANSFORM, TOP, UNICODE_BIDI,
 	VERTICAL_ALIGN, VISIBILITY, VOICE_FAMILY, VOLUME, WHITE_SPACE, WIDOWS,
 	WIDTH, WORD_SPACING, WRITING_MODE, Z_INDEX,
 
diff --git a/src/select/autogenerated_computed.h b/src/select/autogenerated_computed.h
index 40005c1..a961d81 100644
--- a/src/select/autogenerated_computed.h
+++ b/src/select/autogenerated_computed.h
@@ -52,6 +52,7 @@ struct css_computed_style_i {
  * direction                        2             
  * display                          5             
  * empty_cells                      2             
+ * fill                             2               4
  * fill_opacity                     1               4
  * flex_basis                       2 + 5           4
  * flex_direction                   3             
@@ -96,6 +97,7 @@ struct css_computed_style_i {
  * page_break_inside                2             
  * position                         3             
  * right                            2 + 5           4
+ * stroke                           2               4
  * stroke_opacity                   1               4
  * table_layout                     2             
  * text_align                       4             
@@ -142,9 +144,9 @@ struct css_computed_style_i {
  * quotes                           1             sizeof(ptr)
  * 
  * ---                            ---             ---
- *                                464 bits        236 + 8sizeof(ptr) bytes
+ *                                468 bits        244 + 8sizeof(ptr) bytes
  *                                ===================
- *                                294 + 8sizeof(ptr) bytes
+ *                                303 + 8sizeof(ptr) bytes
  * 
  * Bit allocations:
  * 
@@ -180,16 +182,15 @@ struct css_computed_style_i {
  * cursor; break_inside; break_before; break_after; border_top_style;
  * border_right_style; border_left_style; text_transform
  * 
- * 10 bbbaaallliiizzwwvvuuttppoossffnn
+ * 10 bbbaaallliiizzwwvvuuttssppooyyff
  * background_repeat; align_self; align_items; align_content; z_index;
- * writing_mode; visibility; unicode_bidi; table_layout; page_break_inside;
- * outline_color; list_style_position; font_variant; font_style
+ * writing_mode; visibility; unicode_bidi; table_layout; stroke;
+ * page_break_inside; outline_color; list_style_position; font_variant
  * 
- * 11 fflleeddccoouummnnaabbrriittppBB
- * float; flex_wrap; empty_cells; direction; content; column_span;
- * column_rule_color; column_fill; column_count; caption_side; box_sizing;
- * border_top_color; border_right_color; border_left_color; border_collapse;
- * border_bottom_color
+ * 11 fflleeiimmddccoouunnttaabbrrggBB
+ * font_style; float; flex_wrap; fill; empty_cells; direction; content;
+ * column_span; column_rule_color; column_fill; column_count; caption_side;
+ * box_sizing; border_top_color; border_right_color; border_left_color
  * 
  * 12 bbbbbbbbbbbaaaaaaaaaaavvvvvvvvvw
  * border_spacing; background_position; vertical_align; widows
@@ -199,10 +200,11 @@ struct css_computed_style_i {
  * overflow_y; overflow_x; justify_content; font_family; flex_direction; clear;
  * stroke_opacity
  * 
- * 14 bbaaqorplfeicuCk................
- * background_color; background_attachment; quotes; orphans; order; opacity;
- * list_style_image; flex_shrink; flex_grow; fill_opacity; counter_reset;
- * counter_increment; color; background_image
+ * 14 bbooaaccqrdplfeiunCk............
+ * border_collapse; border_bottom_color; background_color;
+ * background_attachment; quotes; orphans; order; opacity; list_style_image;
+ * flex_shrink; flex_grow; fill_opacity; counter_reset; counter_increment;
+ * color; background_image
  */
 	uint32_t bits[15];
 	
@@ -231,6 +233,7 @@ struct css_computed_style_i {
 	css_color column_rule_color;
 	css_fixed column_rule_width;
 	css_fixed column_width;
+	css_color fill;
 	css_fixed fill_opacity;
 	css_fixed flex_basis;
 	css_fixed flex_grow;
@@ -259,6 +262,7 @@ struct css_computed_style_i {
 	css_fixed padding_right;
 	css_fixed padding_top;
 	css_fixed right;
+	css_color stroke;
 	css_fixed stroke_opacity;
 	css_fixed text_indent;
 	css_fixed top;
diff --git a/src/select/autogenerated_propget.h b/src/select/autogenerated_propget.h
index d1f7ffb..47be3dc 100644
--- a/src/select/autogenerated_propget.h
+++ b/src/select/autogenerated_propget.h
@@ -85,8 +85,8 @@ static inline uint8_t get_align_self(const css_computed_style *style)
 #undef ALIGN_SELF_MASK
 
 #define BACKGROUND_ATTACHMENT_INDEX 14
-#define BACKGROUND_ATTACHMENT_SHIFT 28
-#define BACKGROUND_ATTACHMENT_MASK 0x30000000
+#define BACKGROUND_ATTACHMENT_SHIFT 24
+#define BACKGROUND_ATTACHMENT_MASK 0x3000000
 static inline uint8_t get_background_attachment_bits(const css_computed_style
 		*style)
 {
@@ -112,8 +112,8 @@ static inline uint8_t get_background_attachment(const css_computed_style *style)
 #undef BACKGROUND_ATTACHMENT_MASK
 
 #define BACKGROUND_COLOR_INDEX 14
-#define BACKGROUND_COLOR_SHIFT 30
-#define BACKGROUND_COLOR_MASK 0xc0000000
+#define BACKGROUND_COLOR_SHIFT 26
+#define BACKGROUND_COLOR_MASK 0xc000000
 static inline uint8_t get_background_color_bits(const css_computed_style *style)
 {
 	uint32_t bits = style->i.bits[BACKGROUND_COLOR_INDEX];
@@ -140,8 +140,8 @@ static inline uint8_t get_background_color(const css_computed_style *style,
 #undef BACKGROUND_COLOR_MASK
 
 #define BACKGROUND_IMAGE_INDEX 14
-#define BACKGROUND_IMAGE_SHIFT 16
-#define BACKGROUND_IMAGE_MASK 0x10000
+#define BACKGROUND_IMAGE_SHIFT 12
+#define BACKGROUND_IMAGE_MASK 0x1000
 static inline uint8_t get_background_image_bits(const css_computed_style *style)
 {
 	uint32_t bits = style->i.bits[BACKGROUND_IMAGE_INDEX];
@@ -229,9 +229,9 @@ static inline uint8_t get_background_repeat(const css_computed_style *style)
 #undef BACKGROUND_REPEAT_SHIFT
 #undef BACKGROUND_REPEAT_MASK
 
-#define BORDER_BOTTOM_COLOR_INDEX 11
-#define BORDER_BOTTOM_COLOR_SHIFT 0
-#define BORDER_BOTTOM_COLOR_MASK 0x3
+#define BORDER_BOTTOM_COLOR_INDEX 14
+#define BORDER_BOTTOM_COLOR_SHIFT 28
+#define BORDER_BOTTOM_COLOR_MASK 0x30000000
 static inline uint8_t get_border_bottom_color_bits(const css_computed_style
 		*style)
 {
@@ -317,9 +317,9 @@ static inline uint8_t get_border_bottom_width(const css_computed_style *style,
 #undef BORDER_BOTTOM_WIDTH_SHIFT
 #undef BORDER_BOTTOM_WIDTH_MASK
 
-#define BORDER_COLLAPSE_INDEX 11
-#define BORDER_COLLAPSE_SHIFT 2
-#define BORDER_COLLAPSE_MASK 0xc
+#define BORDER_COLLAPSE_INDEX 14
+#define BORDER_COLLAPSE_SHIFT 30
+#define BORDER_COLLAPSE_MASK 0xc0000000
 static inline uint8_t get_border_collapse_bits(const css_computed_style *style)
 {
 	uint32_t bits = style->i.bits[BORDER_COLLAPSE_INDEX];
@@ -344,8 +344,8 @@ static inline uint8_t get_border_collapse(const css_computed_style *style)
 #undef BORDER_COLLAPSE_MASK
 
 #define BORDER_LEFT_COLOR_INDEX 11
-#define BORDER_LEFT_COLOR_SHIFT 4
-#define BORDER_LEFT_COLOR_MASK 0x30
+#define BORDER_LEFT_COLOR_SHIFT 0
+#define BORDER_LEFT_COLOR_MASK 0x3
 static inline uint8_t get_border_left_color_bits(const css_computed_style
 		*style)
 {
@@ -432,8 +432,8 @@ static inline uint8_t get_border_left_width(const css_computed_style *style,
 #undef BORDER_LEFT_WIDTH_MASK
 
 #define BORDER_RIGHT_COLOR_INDEX 11
-#define BORDER_RIGHT_COLOR_SHIFT 6
-#define BORDER_RIGHT_COLOR_MASK 0xc0
+#define BORDER_RIGHT_COLOR_SHIFT 2
+#define BORDER_RIGHT_COLOR_MASK 0xc
 static inline uint8_t get_border_right_color_bits(const css_computed_style
 		*style)
 {
@@ -554,8 +554,8 @@ static inline uint8_t get_border_spacing(const css_computed_style *style,
 #undef BORDER_SPACING_MASK
 
 #define BORDER_TOP_COLOR_INDEX 11
-#define BORDER_TOP_COLOR_SHIFT 8
-#define BORDER_TOP_COLOR_MASK 0x300
+#define BORDER_TOP_COLOR_SHIFT 4
+#define BORDER_TOP_COLOR_MASK 0x30
 static inline uint8_t get_border_top_color_bits(const css_computed_style *style)
 {
 	uint32_t bits = style->i.bits[BORDER_TOP_COLOR_INDEX];
@@ -670,8 +670,8 @@ static inline uint8_t get_bottom(const css_computed_style *style, css_fixed
 #undef BOTTOM_MASK
 
 #define BOX_SIZING_INDEX 11
-#define BOX_SIZING_SHIFT 10
-#define BOX_SIZING_MASK 0xc00
+#define BOX_SIZING_SHIFT 6
+#define BOX_SIZING_MASK 0xc0
 static inline uint8_t get_box_sizing_bits(const css_computed_style *style)
 {
 	uint32_t bits = style->i.bits[BOX_SIZING_INDEX];
@@ -774,8 +774,8 @@ static inline uint8_t get_break_inside(const css_computed_style *style)
 #undef BREAK_INSIDE_MASK
 
 #define CAPTION_SIDE_INDEX 11
-#define CAPTION_SIDE_SHIFT 12
-#define CAPTION_SIDE_MASK 0x3000
+#define CAPTION_SIDE_SHIFT 8
+#define CAPTION_SIDE_MASK 0x300
 static inline uint8_t get_caption_side_bits(const css_computed_style *style)
 {
 	uint32_t bits = style->i.bits[CAPTION_SIDE_INDEX];
@@ -878,8 +878,8 @@ static inline uint8_t get_clip(
 #undef CLIP_MASK
 
 #define COLOR_INDEX 14
-#define COLOR_SHIFT 17
-#define COLOR_MASK 0x20000
+#define COLOR_SHIFT 13
+#define COLOR_MASK 0x2000
 static inline uint8_t get_color_bits(const css_computed_style *style)
 {
 	uint32_t bits = style->i.bits[COLOR_INDEX];
@@ -906,8 +906,8 @@ static inline uint8_t get_color(const css_computed_style *style, css_color
 #undef COLOR_MASK
 
 #define COLUMN_COUNT_INDEX 11
-#define COLUMN_COUNT_SHIFT 14
-#define COLUMN_COUNT_MASK 0xc000
+#define COLUMN_COUNT_SHIFT 10
+#define COLUMN_COUNT_MASK 0xc00
 static inline uint8_t get_column_count_bits(const css_computed_style *style)
 {
 	uint32_t bits = style->i.bits[COLUMN_COUNT_INDEX];
@@ -934,8 +934,8 @@ static inline uint8_t get_column_count(const css_computed_style *style, int32_t
 #undef COLUMN_COUNT_MASK
 
 #define COLUMN_FILL_INDEX 11
-#define COLUMN_FILL_SHIFT 16
-#define COLUMN_FILL_MASK 0x30000
+#define COLUMN_FILL_SHIFT 12
+#define COLUMN_FILL_MASK 0x3000
 static inline uint8_t get_column_fill_bits(const css_computed_style *style)
 {
 	uint32_t bits = style->i.bits[COLUMN_FILL_INDEX];
@@ -991,8 +991,8 @@ static inline uint8_t get_column_gap(const css_computed_style *style, css_fixed
 #undef COLUMN_GAP_MASK
 
 #define COLUMN_RULE_COLOR_INDEX 11
-#define COLUMN_RULE_COLOR_SHIFT 18
-#define COLUMN_RULE_COLOR_MASK 0xc0000
+#define COLUMN_RULE_COLOR_SHIFT 14
+#define COLUMN_RULE_COLOR_MASK 0xc000
 static inline uint8_t get_column_rule_color_bits(const css_computed_style
 		*style)
 {
@@ -1079,8 +1079,8 @@ static inline uint8_t get_column_rule_width(const css_computed_style *style,
 #undef COLUMN_RULE_WIDTH_MASK
 
 #define COLUMN_SPAN_INDEX 11
-#define COLUMN_SPAN_SHIFT 20
-#define COLUMN_SPAN_MASK 0x300000
+#define COLUMN_SPAN_SHIFT 16
+#define COLUMN_SPAN_MASK 0x30000
 static inline uint8_t get_column_span_bits(const css_computed_style *style)
 {
 	uint32_t bits = style->i.bits[COLUMN_SPAN_INDEX];
@@ -1136,8 +1136,8 @@ static inline uint8_t get_column_width(const css_computed_style *style,
 #undef COLUMN_WIDTH_MASK
 
 #define CONTENT_INDEX 11
-#define CONTENT_SHIFT 22
-#define CONTENT_MASK 0xc00000
+#define CONTENT_SHIFT 18
+#define CONTENT_MASK 0xc0000
 static inline uint8_t get_content_bits(const css_computed_style *style)
 {
 	uint32_t bits = style->i.bits[CONTENT_INDEX];
@@ -1166,8 +1166,8 @@ static inline uint8_t get_content(const css_computed_style *style, const
 #undef CONTENT_MASK
 
 #define COUNTER_INCREMENT_INDEX 14
-#define COUNTER_INCREMENT_SHIFT 18
-#define COUNTER_INCREMENT_MASK 0x40000
+#define COUNTER_INCREMENT_SHIFT 14
+#define COUNTER_INCREMENT_MASK 0x4000
 static inline uint8_t get_counter_increment_bits(const css_computed_style
 		*style)
 {
@@ -1195,8 +1195,8 @@ static inline uint8_t get_counter_increment(const css_computed_style *style,
 #undef COUNTER_INCREMENT_MASK
 
 #define COUNTER_RESET_INDEX 14
-#define COUNTER_RESET_SHIFT 19
-#define COUNTER_RESET_MASK 0x80000
+#define COUNTER_RESET_SHIFT 15
+#define COUNTER_RESET_MASK 0x8000
 static inline uint8_t get_counter_reset_bits(const css_computed_style *style)
 {
 	uint32_t bits = style->i.bits[COUNTER_RESET_INDEX];
@@ -1251,8 +1251,8 @@ static inline uint8_t get_cursor(const css_computed_style *style, lwc_string
 #undef CURSOR_MASK
 
 #define DIRECTION_INDEX 11
-#define DIRECTION_SHIFT 24
-#define DIRECTION_MASK 0x3000000
+#define DIRECTION_SHIFT 20
+#define DIRECTION_MASK 0x300000
 static inline uint8_t get_direction_bits(const css_computed_style *style)
 {
 	uint32_t bits = style->i.bits[DIRECTION_INDEX];
@@ -1303,8 +1303,8 @@ static inline uint8_t get_display(const css_computed_style *style)
 #undef DISPLAY_MASK
 
 #define EMPTY_CELLS_INDEX 11
-#define EMPTY_CELLS_SHIFT 26
-#define EMPTY_CELLS_MASK 0xc000000
+#define EMPTY_CELLS_SHIFT 22
+#define EMPTY_CELLS_MASK 0xc00000
 static inline uint8_t get_empty_cells_bits(const css_computed_style *style)
 {
 	uint32_t bits = style->i.bits[EMPTY_CELLS_INDEX];
@@ -1328,9 +1328,37 @@ static inline uint8_t get_empty_cells(const css_computed_style *style)
 #undef EMPTY_CELLS_SHIFT
 #undef EMPTY_CELLS_MASK
 
+#define FILL_INDEX 11
+#define FILL_SHIFT 24
+#define FILL_MASK 0x3000000
+static inline uint8_t get_fill_bits(const css_computed_style *style)
+{
+	uint32_t bits = style->i.bits[FILL_INDEX];
+	bits &= FILL_MASK;
+	bits >>= FILL_SHIFT;
+	
+	/* 2bits: tt : type */
+	return (bits & 0x3);
+}
+static inline uint8_t get_fill(const css_computed_style *style, css_color
+		*color)
+{
+	uint32_t bits = style->i.bits[FILL_INDEX];
+	bits &= FILL_MASK;
+	bits >>= FILL_SHIFT;
+	
+	/* 2bits: tt : type */
+	*color = style->i.fill;
+	
+	return (bits & 0x3);
+}
+#undef FILL_INDEX
+#undef FILL_SHIFT
+#undef FILL_MASK
+
 #define FILL_OPACITY_INDEX 14
-#define FILL_OPACITY_SHIFT 20
-#define FILL_OPACITY_MASK 0x100000
+#define FILL_OPACITY_SHIFT 16
+#define FILL_OPACITY_MASK 0x10000
 static inline uint8_t get_fill_opacity_bits(const css_computed_style *style)
 {
 	uint32_t bits = style->i.bits[FILL_OPACITY_INDEX];
@@ -1416,8 +1444,8 @@ static inline uint8_t get_flex_direction(const css_computed_style *style)
 #undef FLEX_DIRECTION_MASK
 
 #define FLEX_GROW_INDEX 14
-#define FLEX_GROW_SHIFT 21
-#define FLEX_GROW_MASK 0x200000
+#define FLEX_GROW_SHIFT 17
+#define FLEX_GROW_MASK 0x20000
 static inline uint8_t get_flex_grow_bits(const css_computed_style *style)
 {
 	uint32_t bits = style->i.bits[FLEX_GROW_INDEX];
@@ -1446,8 +1474,8 @@ static inline uint8_t get_flex_grow(const css_computed_style *style, css_fixed
 #undef FLEX_GROW_MASK
 
 #define FLEX_SHRINK_INDEX 14
-#define FLEX_SHRINK_SHIFT 22
-#define FLEX_SHRINK_MASK 0x400000
+#define FLEX_SHRINK_SHIFT 18
+#define FLEX_SHRINK_MASK 0x40000
 static inline uint8_t get_flex_shrink_bits(const css_computed_style *style)
 {
 	uint32_t bits = style->i.bits[FLEX_SHRINK_INDEX];
@@ -1476,8 +1504,8 @@ static inline uint8_t get_flex_shrink(const css_computed_style *style,
 #undef FLEX_SHRINK_MASK
 
 #define FLEX_WRAP_INDEX 11
-#define FLEX_WRAP_SHIFT 28
-#define FLEX_WRAP_MASK 0x30000000
+#define FLEX_WRAP_SHIFT 26
+#define FLEX_WRAP_MASK 0xc000000
 static inline uint8_t get_flex_wrap_bits(const css_computed_style *style)
 {
 	uint32_t bits = style->i.bits[FLEX_WRAP_INDEX];
@@ -1502,8 +1530,8 @@ static inline uint8_t get_flex_wrap(const css_computed_style *style)
 #undef FLEX_WRAP_MASK
 
 #define FLOAT_INDEX 11
-#define FLOAT_SHIFT 30
-#define FLOAT_MASK 0xc0000000
+#define FLOAT_SHIFT 28
+#define FLOAT_MASK 0x30000000
 static inline uint8_t get_float_bits(const css_computed_style *style)
 {
 	uint32_t bits = style->i.bits[FLOAT_INDEX];
@@ -1586,9 +1614,9 @@ static inline uint8_t get_font_size(const css_computed_style *style, css_fixed
 #undef FONT_SIZE_SHIFT
 #undef FONT_SIZE_MASK
 
-#define FONT_STYLE_INDEX 10
-#define FONT_STYLE_SHIFT 0
-#define FONT_STYLE_MASK 0x3
+#define FONT_STYLE_INDEX 11
+#define FONT_STYLE_SHIFT 30
+#define FONT_STYLE_MASK 0xc0000000
 static inline uint8_t get_font_style_bits(const css_computed_style *style)
 {
 	uint32_t bits = style->i.bits[FONT_STYLE_INDEX];
@@ -1613,8 +1641,8 @@ static inline uint8_t get_font_style(const css_computed_style *style)
 #undef FONT_STYLE_MASK
 
 #define FONT_VARIANT_INDEX 10
-#define FONT_VARIANT_SHIFT 2
-#define FONT_VARIANT_MASK 0xc
+#define FONT_VARIANT_SHIFT 0
+#define FONT_VARIANT_MASK 0x3
 static inline uint8_t get_font_variant_bits(const css_computed_style *style)
 {
 	uint32_t bits = style->i.bits[FONT_VARIANT_INDEX];
@@ -1820,8 +1848,8 @@ static inline uint8_t get_line_height(
 #undef LINE_HEIGHT_MASK
 
 #define LIST_STYLE_IMAGE_INDEX 14
-#define LIST_STYLE_IMAGE_SHIFT 23
-#define LIST_STYLE_IMAGE_MASK 0x800000
+#define LIST_STYLE_IMAGE_SHIFT 19
+#define LIST_STYLE_IMAGE_MASK 0x80000
 static inline uint8_t get_list_style_image_bits(const css_computed_style *style)
 {
 	uint32_t bits = style->i.bits[LIST_STYLE_IMAGE_INDEX];
@@ -1848,8 +1876,8 @@ static inline uint8_t get_list_style_image(const css_computed_style *style,
 #undef LIST_STYLE_IMAGE_MASK
 
 #define LIST_STYLE_POSITION_INDEX 10
-#define LIST_STYLE_POSITION_SHIFT 4
-#define LIST_STYLE_POSITION_MASK 0x30
+#define LIST_STYLE_POSITION_SHIFT 2
+#define LIST_STYLE_POSITION_MASK 0xc
 static inline uint8_t get_list_style_position_bits(const css_computed_style
 		*style)
 {
@@ -2149,8 +2177,8 @@ static inline uint8_t get_min_width(const css_computed_style *style, css_fixed
 #undef MIN_WIDTH_MASK
 
 #define OPACITY_INDEX 14
-#define OPACITY_SHIFT 24
-#define OPACITY_MASK 0x1000000
+#define OPACITY_SHIFT 20
+#define OPACITY_MASK 0x100000
 static inline uint8_t get_opacity_bits(const css_computed_style *style)
 {
 	uint32_t bits = style->i.bits[OPACITY_INDEX];
@@ -2179,8 +2207,8 @@ static inline uint8_t get_opacity(const css_computed_style *style, css_fixed
 #undef OPACITY_MASK
 
 #define ORDER_INDEX 14
-#define ORDER_SHIFT 25
-#define ORDER_MASK 0x2000000
+#define ORDER_SHIFT 21
+#define ORDER_MASK 0x200000
 static inline uint8_t get_order_bits(const css_computed_style *style)
 {
 	uint32_t bits = style->i.bits[ORDER_INDEX];
@@ -2209,8 +2237,8 @@ static inline uint8_t get_order(const css_computed_style *style, int32_t
 #undef ORDER_MASK
 
 #define ORPHANS_INDEX 14
-#define ORPHANS_SHIFT 26
-#define ORPHANS_MASK 0x4000000
+#define ORPHANS_SHIFT 22
+#define ORPHANS_MASK 0x400000
 static inline uint8_t get_orphans_bits(const css_computed_style *style)
 {
 	uint32_t bits = style->i.bits[ORPHANS_INDEX];
@@ -2237,8 +2265,8 @@ static inline uint8_t get_orphans(const css_computed_style *style, int32_t
 #undef ORPHANS_MASK
 
 #define OUTLINE_COLOR_INDEX 10
-#define OUTLINE_COLOR_SHIFT 6
-#define OUTLINE_COLOR_MASK 0xc0
+#define OUTLINE_COLOR_SHIFT 4
+#define OUTLINE_COLOR_MASK 0x30
 static inline uint8_t get_outline_color_bits(const css_computed_style *style)
 {
 	uint32_t bits = style->i.bits[OUTLINE_COLOR_INDEX];
@@ -2553,8 +2581,8 @@ static inline uint8_t get_page_break_before(const css_computed_style *style)
 #undef PAGE_BREAK_BEFORE_MASK
 
 #define PAGE_BREAK_INSIDE_INDEX 10
-#define PAGE_BREAK_INSIDE_SHIFT 8
-#define PAGE_BREAK_INSIDE_MASK 0x300
+#define PAGE_BREAK_INSIDE_SHIFT 6
+#define PAGE_BREAK_INSIDE_MASK 0xc0
 static inline uint8_t get_page_break_inside_bits(const css_computed_style
 		*style)
 {
@@ -2606,8 +2634,8 @@ static inline uint8_t get_position(const css_computed_style *style)
 #undef POSITION_MASK
 
 #define QUOTES_INDEX 14
-#define QUOTES_SHIFT 27
-#define QUOTES_MASK 0x8000000
+#define QUOTES_SHIFT 23
+#define QUOTES_MASK 0x800000
 static inline uint8_t get_quotes_bits(const css_computed_style *style)
 {
 	uint32_t bits = style->i.bits[QUOTES_INDEX];
@@ -2664,6 +2692,34 @@ static inline uint8_t get_right(const css_computed_style *style, css_fixed
 #undef RIGHT_SHIFT
 #undef RIGHT_MASK
 
+#define STROKE_INDEX 10
+#define STROKE_SHIFT 8
+#define STROKE_MASK 0x300
+static inline uint8_t get_stroke_bits(const css_computed_style *style)
+{
+	uint32_t bits = style->i.bits[STROKE_INDEX];
+	bits &= STROKE_MASK;
+	bits >>= STROKE_SHIFT;
+	
+	/* 2bits: tt : type */
+	return (bits & 0x3);
+}
+static inline uint8_t get_stroke(const css_computed_style *style, css_color
+		*color)
+{
+	uint32_t bits = style->i.bits[STROKE_INDEX];
+	bits &= STROKE_MASK;
+	bits >>= STROKE_SHIFT;
+	
+	/* 2bits: tt : type */
+	*color = style->i.stroke;
+	
+	return (bits & 0x3);
+}
+#undef STROKE_INDEX
+#undef STROKE_SHIFT
+#undef STROKE_MASK
+
 #define STROKE_OPACITY_INDEX 13
 #define STROKE_OPACITY_SHIFT 0
 #define STROKE_OPACITY_MASK 0x1
diff --git a/src/select/autogenerated_propset.h b/src/select/autogenerated_propset.h
index 198bc1e..a9df00c 100644
--- a/src/select/autogenerated_propset.h
+++ b/src/select/autogenerated_propset.h
@@ -64,8 +64,8 @@ static inline css_error set_align_self(css_computed_style *style, uint8_t type)
 #undef ALIGN_SELF_MASK
 
 #define BACKGROUND_ATTACHMENT_INDEX 14
-#define BACKGROUND_ATTACHMENT_SHIFT 28
-#define BACKGROUND_ATTACHMENT_MASK 0x30000000
+#define BACKGROUND_ATTACHMENT_SHIFT 24
+#define BACKGROUND_ATTACHMENT_MASK 0x3000000
 
 static inline css_error set_background_attachment(css_computed_style *style,
 		uint8_t type)
@@ -83,8 +83,8 @@ static inline css_error set_background_attachment(css_computed_style *style,
 #undef BACKGROUND_ATTACHMENT_MASK
 
 #define BACKGROUND_COLOR_INDEX 14
-#define BACKGROUND_COLOR_SHIFT 30
-#define BACKGROUND_COLOR_MASK 0xc0000000
+#define BACKGROUND_COLOR_SHIFT 26
+#define BACKGROUND_COLOR_MASK 0xc000000
 
 static inline css_error set_background_color(css_computed_style *style, uint8_t
 		type, css_color color)
@@ -104,8 +104,8 @@ static inline css_error set_background_color(css_computed_style *style, uint8_t
 #undef BACKGROUND_COLOR_MASK
 
 #define BACKGROUND_IMAGE_INDEX 14
-#define BACKGROUND_IMAGE_SHIFT 16
-#define BACKGROUND_IMAGE_MASK 0x10000
+#define BACKGROUND_IMAGE_SHIFT 12
+#define BACKGROUND_IMAGE_MASK 0x1000
 
 static inline css_error set_background_image(css_computed_style *style, uint8_t
 		type, lwc_string *string)
@@ -177,9 +177,9 @@ static inline css_error set_background_repeat(css_computed_style *style,
 #undef BACKGROUND_REPEAT_SHIFT
 #undef BACKGROUND_REPEAT_MASK
 
-#define BORDER_BOTTOM_COLOR_INDEX 11
-#define BORDER_BOTTOM_COLOR_SHIFT 0
-#define BORDER_BOTTOM_COLOR_MASK 0x3
+#define BORDER_BOTTOM_COLOR_INDEX 14
+#define BORDER_BOTTOM_COLOR_SHIFT 28
+#define BORDER_BOTTOM_COLOR_MASK 0x30000000
 
 static inline css_error set_border_bottom_color(css_computed_style *style,
 		uint8_t type, css_color color)
@@ -238,9 +238,9 @@ static inline css_error set_border_bottom_width(css_computed_style *style,
 #undef BORDER_BOTTOM_WIDTH_SHIFT
 #undef BORDER_BOTTOM_WIDTH_MASK
 
-#define BORDER_COLLAPSE_INDEX 11
-#define BORDER_COLLAPSE_SHIFT 2
-#define BORDER_COLLAPSE_MASK 0xc
+#define BORDER_COLLAPSE_INDEX 14
+#define BORDER_COLLAPSE_SHIFT 30
+#define BORDER_COLLAPSE_MASK 0xc0000000
 
 static inline css_error set_border_collapse(css_computed_style *style, uint8_t
 		type)
@@ -258,8 +258,8 @@ static inline css_error set_border_collapse(css_computed_style *style, uint8_t
 #undef BORDER_COLLAPSE_MASK
 
 #define BORDER_LEFT_COLOR_INDEX 11
-#define BORDER_LEFT_COLOR_SHIFT 4
-#define BORDER_LEFT_COLOR_MASK 0x30
+#define BORDER_LEFT_COLOR_SHIFT 0
+#define BORDER_LEFT_COLOR_MASK 0x3
 
 static inline css_error set_border_left_color(css_computed_style *style,
 		uint8_t type, css_color color)
@@ -319,8 +319,8 @@ static inline css_error set_border_left_width(css_computed_style *style,
 #undef BORDER_LEFT_WIDTH_MASK
 
 #define BORDER_RIGHT_COLOR_INDEX 11
-#define BORDER_RIGHT_COLOR_SHIFT 6
-#define BORDER_RIGHT_COLOR_MASK 0xc0
+#define BORDER_RIGHT_COLOR_SHIFT 2
+#define BORDER_RIGHT_COLOR_MASK 0xc
 
 static inline css_error set_border_right_color(css_computed_style *style,
 		uint8_t type, css_color color)
@@ -404,8 +404,8 @@ static inline css_error set_border_spacing(css_computed_style *style, uint8_t
 #undef BORDER_SPACING_MASK
 
 #define BORDER_TOP_COLOR_INDEX 11
-#define BORDER_TOP_COLOR_SHIFT 8
-#define BORDER_TOP_COLOR_MASK 0x300
+#define BORDER_TOP_COLOR_SHIFT 4
+#define BORDER_TOP_COLOR_MASK 0x30
 
 static inline css_error set_border_top_color(css_computed_style *style, uint8_t
 		type, css_color color)
@@ -486,8 +486,8 @@ static inline css_error set_bottom(css_computed_style *style, uint8_t type,
 #undef BOTTOM_MASK
 
 #define BOX_SIZING_INDEX 11
-#define BOX_SIZING_SHIFT 10
-#define BOX_SIZING_MASK 0xc00
+#define BOX_SIZING_SHIFT 6
+#define BOX_SIZING_MASK 0xc0
 
 static inline css_error set_box_sizing(css_computed_style *style, uint8_t type)
 {
@@ -560,8 +560,8 @@ static inline css_error set_break_inside(css_computed_style *style, uint8_t
 #undef BREAK_INSIDE_MASK
 
 #define CAPTION_SIDE_INDEX 11
-#define CAPTION_SIDE_SHIFT 12
-#define CAPTION_SIDE_MASK 0x3000
+#define CAPTION_SIDE_SHIFT 8
+#define CAPTION_SIDE_MASK 0x300
 
 static inline css_error set_caption_side(css_computed_style *style, uint8_t
 		type)
@@ -639,8 +639,8 @@ static inline css_error set_clip(
 #undef CLIP_MASK
 
 #define COLOR_INDEX 14
-#define COLOR_SHIFT 17
-#define COLOR_MASK 0x20000
+#define COLOR_SHIFT 13
+#define COLOR_MASK 0x2000
 
 static inline css_error set_color(css_computed_style *style, uint8_t type,
 		css_color color)
@@ -659,8 +659,8 @@ static inline css_error set_color(css_computed_style *style, uint8_t type,
 #undef COLOR_MASK
 
 #define COLUMN_COUNT_INDEX 11
-#define COLUMN_COUNT_SHIFT 14
-#define COLUMN_COUNT_MASK 0xc000
+#define COLUMN_COUNT_SHIFT 10
+#define COLUMN_COUNT_MASK 0xc00
 
 static inline css_error set_column_count(css_computed_style *style, uint8_t
 		type, int32_t integer)
@@ -680,8 +680,8 @@ static inline css_error set_column_count(css_computed_style *style, uint8_t
 #undef COLUMN_COUNT_MASK
 
 #define COLUMN_FILL_INDEX 11
-#define COLUMN_FILL_SHIFT 16
-#define COLUMN_FILL_MASK 0x30000
+#define COLUMN_FILL_SHIFT 12
+#define COLUMN_FILL_MASK 0x3000
 
 static inline css_error set_column_fill(css_computed_style *style, uint8_t type)
 {
@@ -719,8 +719,8 @@ static inline css_error set_column_gap(css_computed_style *style, uint8_t type,
 #undef COLUMN_GAP_MASK
 
 #define COLUMN_RULE_COLOR_INDEX 11
-#define COLUMN_RULE_COLOR_SHIFT 18
-#define COLUMN_RULE_COLOR_MASK 0xc0000
+#define COLUMN_RULE_COLOR_SHIFT 14
+#define COLUMN_RULE_COLOR_MASK 0xc000
 
 static inline css_error set_column_rule_color(css_computed_style *style,
 		uint8_t type, css_color color)
@@ -780,8 +780,8 @@ static inline css_error set_column_rule_width(css_computed_style *style,
 #undef COLUMN_RULE_WIDTH_MASK
 
 #define COLUMN_SPAN_INDEX 11
-#define COLUMN_SPAN_SHIFT 20
-#define COLUMN_SPAN_MASK 0x300000
+#define COLUMN_SPAN_SHIFT 16
+#define COLUMN_SPAN_MASK 0x30000
 
 static inline css_error set_column_span(css_computed_style *style, uint8_t type)
 {
@@ -819,8 +819,8 @@ static inline css_error set_column_width(css_computed_style *style, uint8_t
 #undef COLUMN_WIDTH_MASK
 
 #define CONTENT_INDEX 11
-#define CONTENT_SHIFT 22
-#define CONTENT_MASK 0xc00000
+#define CONTENT_SHIFT 18
+#define CONTENT_MASK 0xc0000
 static inline css_error set_content(
 		css_computed_style *style, uint8_t type,
 		css_computed_content_item *content)
@@ -902,8 +902,8 @@ static inline css_error set_content(
 #undef CONTENT_MASK
 
 #define COUNTER_INCREMENT_INDEX 14
-#define COUNTER_INCREMENT_SHIFT 18
-#define COUNTER_INCREMENT_MASK 0x40000
+#define COUNTER_INCREMENT_SHIFT 14
+#define COUNTER_INCREMENT_MASK 0x4000
 
 static inline css_error set_counter_increment(css_computed_style *style,
 		uint8_t type, css_computed_counter *counter_arr)
@@ -938,8 +938,8 @@ static inline css_error set_counter_increment(css_computed_style *style,
 #undef COUNTER_INCREMENT_MASK
 
 #define COUNTER_RESET_INDEX 14
-#define COUNTER_RESET_SHIFT 19
-#define COUNTER_RESET_MASK 0x80000
+#define COUNTER_RESET_SHIFT 15
+#define COUNTER_RESET_MASK 0x8000
 
 static inline css_error set_counter_reset(css_computed_style *style, uint8_t
 		type, css_computed_counter *counter_arr)
@@ -1010,8 +1010,8 @@ static inline css_error set_cursor(css_computed_style *style, uint8_t type,
 #undef CURSOR_MASK
 
 #define DIRECTION_INDEX 11
-#define DIRECTION_SHIFT 24
-#define DIRECTION_MASK 0x3000000
+#define DIRECTION_SHIFT 20
+#define DIRECTION_MASK 0x300000
 
 static inline css_error set_direction(css_computed_style *style, uint8_t type)
 {
@@ -1046,8 +1046,8 @@ static inline css_error set_display(css_computed_style *style, uint8_t type)
 #undef DISPLAY_MASK
 
 #define EMPTY_CELLS_INDEX 11
-#define EMPTY_CELLS_SHIFT 26
-#define EMPTY_CELLS_MASK 0xc000000
+#define EMPTY_CELLS_SHIFT 22
+#define EMPTY_CELLS_MASK 0xc00000
 
 static inline css_error set_empty_cells(css_computed_style *style, uint8_t type)
 {
@@ -1063,9 +1063,29 @@ static inline css_error set_empty_cells(css_computed_style *style, uint8_t type)
 #undef EMPTY_CELLS_SHIFT
 #undef EMPTY_CELLS_MASK
 
+#define FILL_INDEX 11
+#define FILL_SHIFT 24
+#define FILL_MASK 0x3000000
+
+static inline css_error set_fill(css_computed_style *style, uint8_t type,
+		css_color color)
+{
+	uint32_t *bits = &style->i.bits[FILL_INDEX];
+	
+	/* 2bits: tt : type */
+	*bits = (*bits & ~FILL_MASK) | (((uint32_t)type & 0x3) << FILL_SHIFT);
+	
+	style->i.fill = color;
+	
+	return CSS_OK;
+}
+#undef FILL_INDEX
+#undef FILL_SHIFT
+#undef FILL_MASK
+
 #define FILL_OPACITY_INDEX 14
-#define FILL_OPACITY_SHIFT 20
-#define FILL_OPACITY_MASK 0x100000
+#define FILL_OPACITY_SHIFT 16
+#define FILL_OPACITY_MASK 0x10000
 
 static inline css_error set_fill_opacity(css_computed_style *style, uint8_t
 		type, css_fixed fixed)
@@ -1125,8 +1145,8 @@ static inline css_error set_flex_direction(css_computed_style *style, uint8_t
 #undef FLEX_DIRECTION_MASK
 
 #define FLEX_GROW_INDEX 14
-#define FLEX_GROW_SHIFT 21
-#define FLEX_GROW_MASK 0x200000
+#define FLEX_GROW_SHIFT 17
+#define FLEX_GROW_MASK 0x20000
 
 static inline css_error set_flex_grow(css_computed_style *style, uint8_t type,
 		css_fixed fixed)
@@ -1146,8 +1166,8 @@ static inline css_error set_flex_grow(css_computed_style *style, uint8_t type,
 #undef FLEX_GROW_MASK
 
 #define FLEX_SHRINK_INDEX 14
-#define FLEX_SHRINK_SHIFT 22
-#define FLEX_SHRINK_MASK 0x400000
+#define FLEX_SHRINK_SHIFT 18
+#define FLEX_SHRINK_MASK 0x40000
 
 static inline css_error set_flex_shrink(css_computed_style *style, uint8_t
 		type, css_fixed fixed)
@@ -1167,8 +1187,8 @@ static inline css_error set_flex_shrink(css_computed_style *style, uint8_t
 #undef FLEX_SHRINK_MASK
 
 #define FLEX_WRAP_INDEX 11
-#define FLEX_WRAP_SHIFT 28
-#define FLEX_WRAP_MASK 0x30000000
+#define FLEX_WRAP_SHIFT 26
+#define FLEX_WRAP_MASK 0xc000000
 
 static inline css_error set_flex_wrap(css_computed_style *style, uint8_t type)
 {
@@ -1185,8 +1205,8 @@ static inline css_error set_flex_wrap(css_computed_style *style, uint8_t type)
 #undef FLEX_WRAP_MASK
 
 #define FLOAT_INDEX 11
-#define FLOAT_SHIFT 30
-#define FLOAT_MASK 0xc0000000
+#define FLOAT_SHIFT 28
+#define FLOAT_MASK 0x30000000
 
 static inline css_error set_float(css_computed_style *style, uint8_t type)
 {
@@ -1258,9 +1278,9 @@ static inline css_error set_font_size(css_computed_style *style, uint8_t type,
 #undef FONT_SIZE_SHIFT
 #undef FONT_SIZE_MASK
 
-#define FONT_STYLE_INDEX 10
-#define FONT_STYLE_SHIFT 0
-#define FONT_STYLE_MASK 0x3
+#define FONT_STYLE_INDEX 11
+#define FONT_STYLE_SHIFT 30
+#define FONT_STYLE_MASK 0xc0000000
 
 static inline css_error set_font_style(css_computed_style *style, uint8_t type)
 {
@@ -1277,8 +1297,8 @@ static inline css_error set_font_style(css_computed_style *style, uint8_t type)
 #undef FONT_STYLE_MASK
 
 #define FONT_VARIANT_INDEX 10
-#define FONT_VARIANT_SHIFT 2
-#define FONT_VARIANT_MASK 0xc
+#define FONT_VARIANT_SHIFT 0
+#define FONT_VARIANT_MASK 0x3
 
 static inline css_error set_font_variant(css_computed_style *style, uint8_t
 		type)
@@ -1417,8 +1437,8 @@ static inline css_error set_line_height(css_computed_style *style, uint8_t
 #undef LINE_HEIGHT_MASK
 
 #define LIST_STYLE_IMAGE_INDEX 14
-#define LIST_STYLE_IMAGE_SHIFT 23
-#define LIST_STYLE_IMAGE_MASK 0x800000
+#define LIST_STYLE_IMAGE_SHIFT 19
+#define LIST_STYLE_IMAGE_MASK 0x80000
 
 static inline css_error set_list_style_image(css_computed_style *style, uint8_t
 		type, lwc_string *string)
@@ -1447,8 +1467,8 @@ static inline css_error set_list_style_image(css_computed_style *style, uint8_t
 #undef LIST_STYLE_IMAGE_MASK
 
 #define LIST_STYLE_POSITION_INDEX 10
-#define LIST_STYLE_POSITION_SHIFT 4
-#define LIST_STYLE_POSITION_MASK 0x30
+#define LIST_STYLE_POSITION_SHIFT 2
+#define LIST_STYLE_POSITION_MASK 0xc
 
 static inline css_error set_list_style_position(css_computed_style *style,
 		uint8_t type)
@@ -1653,8 +1673,8 @@ static inline css_error set_min_width(css_computed_style *style, uint8_t type,
 #undef MIN_WIDTH_MASK
 
 #define OPACITY_INDEX 14
-#define OPACITY_SHIFT 24
-#define OPACITY_MASK 0x1000000
+#define OPACITY_SHIFT 20
+#define OPACITY_MASK 0x100000
 
 static inline css_error set_opacity(css_computed_style *style, uint8_t type,
 		css_fixed fixed)
@@ -1674,8 +1694,8 @@ static inline css_error set_opacity(css_computed_style *style, uint8_t type,
 #undef OPACITY_MASK
 
 #define ORDER_INDEX 14
-#define ORDER_SHIFT 25
-#define ORDER_MASK 0x2000000
+#define ORDER_SHIFT 21
+#define ORDER_MASK 0x200000
 
 static inline css_error set_order(css_computed_style *style, uint8_t type,
 		int32_t integer)
@@ -1694,8 +1714,8 @@ static inline css_error set_order(css_computed_style *style, uint8_t type,
 #undef ORDER_MASK
 
 #define ORPHANS_INDEX 14
-#define ORPHANS_SHIFT 26
-#define ORPHANS_MASK 0x4000000
+#define ORPHANS_SHIFT 22
+#define ORPHANS_MASK 0x400000
 
 static inline css_error set_orphans(css_computed_style *style, uint8_t type,
 		int32_t integer)
@@ -1715,8 +1735,8 @@ static inline css_error set_orphans(css_computed_style *style, uint8_t type,
 #undef ORPHANS_MASK
 
 #define OUTLINE_COLOR_INDEX 10
-#define OUTLINE_COLOR_SHIFT 6
-#define OUTLINE_COLOR_MASK 0xc0
+#define OUTLINE_COLOR_SHIFT 4
+#define OUTLINE_COLOR_MASK 0x30
 
 static inline css_error set_outline_color(css_computed_style *style, uint8_t
 		type, css_color color)
@@ -1934,8 +1954,8 @@ static inline css_error set_page_break_before(css_computed_style *style,
 #undef PAGE_BREAK_BEFORE_MASK
 
 #define PAGE_BREAK_INSIDE_INDEX 10
-#define PAGE_BREAK_INSIDE_SHIFT 8
-#define PAGE_BREAK_INSIDE_MASK 0x300
+#define PAGE_BREAK_INSIDE_SHIFT 6
+#define PAGE_BREAK_INSIDE_MASK 0xc0
 
 static inline css_error set_page_break_inside(css_computed_style *style,
 		uint8_t type)
@@ -1971,8 +1991,8 @@ static inline css_error set_position(css_computed_style *style, uint8_t type)
 #undef POSITION_MASK
 
 #define QUOTES_INDEX 14
-#define QUOTES_SHIFT 27
-#define QUOTES_MASK 0x8000000
+#define QUOTES_SHIFT 23
+#define QUOTES_MASK 0x800000
 
 static inline css_error set_quotes(css_computed_style *style, uint8_t type,
 		lwc_string **string_arr)
@@ -2027,6 +2047,27 @@ static inline css_error set_right(css_computed_style *style, uint8_t type,
 #undef RIGHT_SHIFT
 #undef RIGHT_MASK
 
+#define STROKE_INDEX 10
+#define STROKE_SHIFT 8
+#define STROKE_MASK 0x300
+
+static inline css_error set_stroke(css_computed_style *style, uint8_t type,
+		css_color color)
+{
+	uint32_t *bits = &style->i.bits[STROKE_INDEX];
+	
+	/* 2bits: tt : type */
+	*bits = (*bits & ~STROKE_MASK) | (((uint32_t)type & 0x3) <<
+			STROKE_SHIFT);
+	
+	style->i.stroke = color;
+	
+	return CSS_OK;
+}
+#undef STROKE_INDEX
+#undef STROKE_SHIFT
+#undef STROKE_MASK
+
 #define STROKE_OPACITY_INDEX 13
 #define STROKE_OPACITY_SHIFT 0
 #define STROKE_OPACITY_MASK 0x1
diff --git a/src/select/computed.c b/src/select/computed.c
index 78f3b80..bd5f82b 100644
--- a/src/select/computed.c
+++ b/src/select/computed.c
@@ -810,6 +810,18 @@ uint8_t css_computed_opacity(const css_computed_style *style,
 	return get_opacity(style, opacity);
 }
 
+uint8_t css_computed_fill(const css_computed_style *style,
+		css_color *color)
+{
+	return get_fill(style, color);
+}
+
+uint8_t css_computed_stroke(const css_computed_style *style,
+		css_color *color)
+{
+	return get_stroke(style, color);
+}
+
 uint8_t css_computed_fill_opacity(const css_computed_style *style,
 		css_fixed *fill_opacity)
 {
diff --git a/src/select/dispatch.c b/src/select/dispatch.c
index cee9335..5cc9b26 100644
--- a/src/select/dispatch.c
+++ b/src/select/dispatch.c
@@ -522,5 +522,13 @@ struct prop_table prop_dispatch[CSS_N_PROPERTIES] = {
 	{
 		PROPERTY_FUNCS(stroke_opacity),
 		1,
-	}
+	},
+	{
+		PROPERTY_FUNCS(fill),
+		1,
+	},
+	{
+		PROPERTY_FUNCS(stroke),
+		1,
+	},
 };
diff --git a/src/select/properties/Makefile b/src/select/properties/Makefile
index eee6cc3..e0dcb12 100644
--- a/src/select/properties/Makefile
+++ b/src/select/properties/Makefile
@@ -50,6 +50,7 @@ direction.c \
 display.c \
 elevation.c \
 empty_cells.c \
+fill.c \
 fill_opacity.c \
 flex_basis.c \
 flex_direction.c \
@@ -108,6 +109,7 @@ speak_header.c \
 speak_numeral.c \
 speak_punctuation.c \
 stress.c \
+stroke.c \
 stroke_opacity.c \
 table_layout.c \
 text_align.c \
diff --git a/src/select/properties/fill.c b/src/select/properties/fill.c
new file mode 100644
index 0000000..08905e7
--- /dev/null
+++ b/src/select/properties/fill.c
@@ -0,0 +1,60 @@
+/*
+ * This file is part of LibCSS
+ * Licensed under the MIT License,
+ *		  http://www.opensource.org/licenses/mit-license.php
+ * Copyright 2009 John-Mark Bell <jmb@netsurf-browser.org>
+ */
+
+#include "bytecode/bytecode.h"
+#include "bytecode/opcodes.h"
+#include "select/propset.h"
+#include "select/propget.h"
+#include "utils/utils.h"
+
+#include "select/properties/properties.h"
+#include "select/properties/helpers.h"
+
+css_error css__cascade_fill(uint32_t opv, css_style *style,
+		css_select_state *state)
+{
+	return css__cascade_bg_border_color(opv, style, state, set_fill);
+}
+
+css_error css__set_fill_from_hint(const css_hint *hint,
+		css_computed_style *style)
+{
+	return set_fill(style, hint->status, hint->data.color);
+}
+
+css_error css__initial_fill(css_select_state *state)
+{
+	return set_fill(state->computed,
+			CSS_FILL_COLOR, 0);
+}
+
+css_error css__copy_fill(
+		const css_computed_style *from,
+		css_computed_style *to)
+{
+	css_color color;
+	uint8_t type = get_fill(from, &color);
+
+	if (from == to) {
+		return CSS_OK;
+	}
+
+	return set_fill(to, type, color);
+}
+
+css_error css__compose_fill(const css_computed_style *parent,
+		const css_computed_style *child,
+		css_computed_style *result)
+{
+	css_color color;
+	uint8_t type = get_fill(child, &color);
+
+	return css__copy_fill(
+			type == CSS_FILL_INHERIT ? parent : child,
+			result);
+}
+
diff --git a/src/select/properties/properties.h b/src/select/properties/properties.h
index cb0b213..ce1897f 100644
--- a/src/select/properties/properties.h
+++ b/src/select/properties/properties.h
@@ -72,6 +72,7 @@ PROPERTY_FUNCS(direction);
 PROPERTY_FUNCS(display);
 PROPERTY_FUNCS(elevation);
 PROPERTY_FUNCS(empty_cells);
+PROPERTY_FUNCS(fill);
 PROPERTY_FUNCS(fill_opacity);
 PROPERTY_FUNCS(flex_basis);
 PROPERTY_FUNCS(flex_direction);
@@ -130,6 +131,7 @@ PROPERTY_FUNCS(speak_punctuation);
 PROPERTY_FUNCS(speak);
 PROPERTY_FUNCS(speech_rate);
 PROPERTY_FUNCS(stress);
+PROPERTY_FUNCS(stroke);
 PROPERTY_FUNCS(stroke_opacity);
 PROPERTY_FUNCS(table_layout);
 PROPERTY_FUNCS(text_align);
diff --git a/src/select/properties/stroke.c b/src/select/properties/stroke.c
new file mode 100644
index 0000000..fa4c83c
--- /dev/null
+++ b/src/select/properties/stroke.c
@@ -0,0 +1,60 @@
+/*
+ * This file is part of LibCSS
+ * Licensed under the MIT License,
+ *		  http://www.opensource.org/licenses/mit-license.php
+ * Copyright 2009 John-Mark Bell <jmb@netsurf-browser.org>
+ */
+
+#include "bytecode/bytecode.h"
+#include "bytecode/opcodes.h"
+#include "select/propset.h"
+#include "select/propget.h"
+#include "utils/utils.h"
+
+#include "select/properties/properties.h"
+#include "select/properties/helpers.h"
+
+css_error css__cascade_stroke(uint32_t opv, css_style *style,
+		css_select_state *state)
+{
+	return css__cascade_bg_border_color(opv, style, state, set_stroke);
+}
+
+css_error css__set_stroke_from_hint(const css_hint *hint,
+		css_computed_style *style)
+{
+	return set_stroke(style, hint->status, hint->data.color);
+}
+
+css_error css__initial_stroke(css_select_state *state)
+{
+	return set_stroke(state->computed,
+			CSS_STROKE_COLOR, 0);
+}
+
+css_error css__copy_stroke(
+		const css_computed_style *from,
+		css_computed_style *to)
+{
+	css_color color;
+	uint8_t type = get_stroke(from, &color);
+
+	if (from == to) {
+		return CSS_OK;
+	}
+
+	return set_stroke(to, type, color);
+}
+
+css_error css__compose_stroke(const css_computed_style *parent,
+		const css_computed_style *child,
+		css_computed_style *result)
+{
+	css_color color;
+	uint8_t type = get_stroke(child, &color);
+
+	return css__copy_stroke(
+			type == CSS_STROKE_INHERIT ? parent : child,
+			result);
+}
+
diff --git a/src/select/select_config.py b/src/select/select_config.py
index 1cfe05c..b2b25b8 100644
--- a/src/select/select_config.py
+++ b/src/select/select_config.py
@@ -70,6 +70,8 @@ style = {
     ('border_right_color', 2, 'color'),
     ('border_bottom_color', 2, 'color'),
     ('border_left_color', 2, 'color'),
+    ('fill', 2, 'color'),
+    ('stroke', 2, 'color'),
     ('border_top_width', 3, 'length', 'CSS_BORDER_WIDTH_WIDTH'),
     ('border_right_width', 3, 'length', 'CSS_BORDER_WIDTH_WIDTH'),
     ('border_bottom_width', 3, 'length', 'CSS_BORDER_WIDTH_WIDTH'),
